- name: OpenCanary playbook
  hosts: canary
  become: yes
  become_method: sudo
  tasks:
    - import_tasks: base/lxc.yaml

    - name: Install dependencies - APT
      apt:
        name: 
            - git
            - python3-dev
            - python3-pip
            - python3-venv
            - libssl-dev
            - libffi-dev
        state: latest
        update_cache: yes

    - name: Install opencanary
      pip:
        name: opencanary
        virtualenv: "/opt/opencanary"
        virtualenv_command: "/usr/bin/python3 -m venv"
        version: "latest"

    - name: Create /etc/opencanary
      file:
        path: /etc/opencanaryd
        state: directory

    - name: Install opencanaryd.service
      copy:
        dest: /etc/systemd/system/opencanaryd.service
        content: |
          [Unit]
          Description=OpenCanary
          After=syslog.target
          After=network.target

          [Service]
          Restart=always
          Environment=VIRTUAL_ENV=/opt/opencanary
          Environment=PATH=$VIRTUAL_ENV/bin:/usr/bin:$PATH
          WorkingDirectory=/opt/opencanary/bin
          ExecStart=/opt/opencanary/bin/opencanaryd --dev

          [Install]
          WantedBy=multi-user.target

    - name: Install opencanary config
      copy:
        dest: /etc/opencanaryd/opencanary.conf
        content: |
          {
            "device.node_id": "opencanary-{{ ansible_hostname }}",
            "ip.ignorelist": [],
            "logtype.ignorelist": [],
            "ftp.enabled": true,
            "ftp.port": 21,
            "ftp.banner": "FTP Server Ready",
            "telnet.enabled": true,
            "telnet.port": 23,
            "telnet.banner": "",
            "telnet.honeycreds": [
              {
                "username": "admin",
                "password": "admin1"
              }
            ],
            "logger": {
              "class": "PyLogger",
              "kwargs": {
                "formatters": {
                  "plain": {
                    "format": "%(message)s"
                  },
                  "syslog_rfc": {
                    "format": "opencanaryd[%(process)-5s:%(thread)d]: %(name)s %(levelname)-5s %(message)s"
                  }
                },
                "handlers": {
                  "console": {
                    "class": "logging.StreamHandler",
                    "stream": "ext://sys.stdout"
                  },
                  "file": {
                    "class": "logging.FileHandler",
                    "filename": "/var/log/opencanary.log"
                  },
                  "webhook": {
                    "class": "opencanary.logger.WebhookHandler",
                    "url": "https://ntfy.digitalhades.dev/alerts",
                    "method": "POST",
                    "data": '{"message": "%(message)s"}',
                    "status_code": 200
                  }
                }
              }
            }
          }
      register: config

    - name: Enable opencanaryd.service
      systemd:
        name: opencanaryd
        state: started
        enabled: yes
        masked: no
        daemon_reload: yes
